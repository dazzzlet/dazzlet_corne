#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        leftshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <29 17>;
            slow-release;
            layers = <0>;
            timeout-ms = <220>;
        };

        leftcontrol {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <15 33>;
            layers = <0>;
            slow-release;
            timeout-ms = <220>;
        };

        leftgui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <14 33>;
            layers = <0>;
            slow-release;
            timeout-ms = <220>;
        };

        leftoption {
            bindings = <&kp LEFT_ALT>;
            key-positions = <33 16>;
            layers = <0>;
            slow-release;
            timeout-ms = <220>;
        };

        rightshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <23 40>;
            layers = <0>;
            slow-release;
            timeout-ms = <220>;
        };

        rightgui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <36 26>;
            layers = <0>;
            slow-release;
            timeout-ms = <220>;
        };

        rightcontrol {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <36 25>;
            layers = <0>;
            slow-release;
            timeout-ms = <220>;
        };

        rightoption {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <36 24>;
            layers = <0>;
            slow-release;
            timeout-ms = <220>;
        };

        left-alt-tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <16 44>;
            timeout-ms = <200>;
            layers = <0>;
        };

        left-gui-tab {
            bindings = <&kp LG(TAB)>;
            key-positions = <14 44>;
            timeout-ms = <220>;
            layers = <0>;
        };

        left-option-tilde {
            bindings = <&kp LA(GRAVE)>;
            key-positions = <14 16>;
            timeout-ms = <220>;
            layers = <0>;
        };

        left-shilf-esc {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <17 42>;
            timeout-ms = <220>;
            layers = <0>;
        };

        wincopy {
            bindings = <&kp LC(C)>;
            key-positions = <29 31>;
            timeout-ms = <220>;
            layers = <0>;
        };

        winpaste {
            bindings = <&kp LC(V)>;
            key-positions = <29 32>;
            layers = <0>;
            timeout-ms = <220>;
        };

        wincut {
            bindings = <&kp LC(X)>;
            key-positions = <29 30>;
        };

        maccopy {
            bindings = <&kp LG(C)>;
            key-positions = <32 31>;
            timeout-ms = <220>;
            layers = <0>;
        };

        maccut {
            bindings = <&kp LG(X)>;
            key-positions = <30 32>;
            timeout-ms = <220>;
            layers = <0>;
        };

        macpaste {
            bindings = <&kp LG(V)>;
            key-positions = <30 32 31>;
            timeout-ms = <220>;
            layers = <0>;
        };

        leftctlshift {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <17 15>;
            timeout-ms = <220>;
            slow-release;
            layers = <0>;
        };

        left-ctraltshift {
            bindings = <&kp LC(LA(LEFT_SHIFT))>;
            key-positions = <17 15 16>;
            timeout-ms = <220>;
            slow-release;
            layers = <0>;
        };

        right-ctrlshift {
            bindings = <&kp RC(RIGHT_SHIFT)>;
            key-positions = <23 25>;
            timeout-ms = <220>;
            slow-release;
            layers = <0>;
        };

        right-ctrlaltshift {
            bindings = <&kp RC(RA(RIGHT_SHIFT))>;
            key-positions = <23 25 24>;
            timeout-ms = <220>;
            slow-release;
            layers = <0>;
        };

        left-cmdshift {
            bindings = <&kp LG(LEFT_SHIFT)>;
            key-positions = <17 14>;
            timeout-ms = <220>;
            slow-release;
            layers = <0>;
        };

        left-cmdoptshift {
            bindings = <&kp LA(LG(LEFT_SHIFT))>;
            key-positions = <17 16 14>;
            timeout-ms = <220>;
            slow-release;
            layers = <0>;
        };

        right-cmdshift {
            bindings = <&kp RG(RIGHT_SHIFT)>;
            key-positions = <23 26>;
            timeout-ms = <220>;
            slow-release;
            layers = <0>;
        };

        right-cmdoptshift {
            bindings = <&kp RA(RG(RIGHT_SHIFT))>;
            key-positions = <23 24 26>;
            timeout-ms = <220>;
            slow-release;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        letter {
            display-name = "QWERTY";
            bindings = <
&none        &kp Q  &kp W  &kp E    &kp R        &kp T                                  &mmv MOVE_UP                     &kp Y            &kp U      &kp I       &kp O    &kp P     &none
&none        &kp A  &kp S  &kp D    &kp F        &kp G                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H            &kp J      &kp K       &kp L    &kp SEMI  &none
&lt 4 GLOBE  &kp Z  &kp X  &kp C    &kp V        &kp B      &kp CAPS                    &mmv MOVE_DOWN                   &kp N            &kp M      &kp COMMA   &kp DOT  &kp FSLH  &none
                           &kp ESC  &lt 1 SPACE  &lt 3 TAB                                                               &lt 2 BACKSPACE  &kp ENTER  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        number {
            display-name = "NUMBER";
            bindings = <
&none  &none         &kp F9               &kp F10          &kp F11            &kp F12                                &mmv MOVE_UP                     &kp PLUS       &kp N7              &kp N8            &kp N9                &kp KP_ASTERISK      &none
&none  &kp LEFT_GUI  &mt LEFT_CONTROL F5  &mt LEFT_ALT F6  &mt LEFT_SHIFT F7  &kp F8                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp N0         &mt RIGHT_SHIFT N4  &mt RIGHT_ALT N5  &mt RIGHT_CONTROL N6  &mt RIGHT_GUI MINUS  &none
&none  &none         &kp F1               &kp F2           &kp F3             &kp F4   &kp C_MUTE                    &mmv MOVE_DOWN                   &kp MINUS      &kp N1              &kp N2            &kp N3                &kp KP_DIVIDE        &none
                                          &none            &none              &none                                                                   &kp BACKSPACE  &kp ENTER           &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        symbol {
            display-name = "SYMBOL";
            bindings = <
&none  &kp EXCL            &kp AT            &kp HASH      &kp DLLR        &kp PRCNT                           &mmv MOVE_UP                     &kp CARET  &kp AMPS             &kp ASTRK                   &kp LPAR                         &kp RPAR                 &bootloader
&none  &mt LEFT_GUI GRAVE  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_SHIFT  &none               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp COLON  &mt RIGHT_SHIFT SQT  &mt RIGHT_ALT LEFT_BRACKET  &mt RIGHT_CONTROL RIGHT_BRACKET  &mt RIGHT_GUI BACKSLASH  &sys_reset
&none  &none               &none             &none         &none           &none      &none                    &mmv MOVE_DOWN                   &kp MINUS  &kp EQUAL            &kp LBRC                    &kp RBRC                         &kp PIPE                 &none
                                             &kp ESC       &kp SPACE       &kp TAB                                                              &none      &none                &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        movement {
            display-name = "Fn";
            bindings = <
&bootloader  &none         &none             &mkp MCLK               &mkp RCLK             &mkp LCLK                                      &mmv MOVE_UP                     &kp HOME       &kp END    &kp PAGE_UP   &kp PAGE_DOWN  &none  &none
&sys_reset   &kp LEFT_GUI  &kp LEFT_CONTROL  &mt LEFT_ALT BACKSPACE  &mt LEFT_SHIFT ENTER  &kp DELETE                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT       &kp DOWN   &kp UP_ARROW  &kp RIGHT      &none  &none
&none        &none         &msc SCRL_LEFT    &msc SCRL_UP            &msc SCRL_DOWN        &msc SCRL_RIGHT  &kp C_MUTE                    &mmv MOVE_DOWN                   &none          &none      &none         &none          &none  &none
                                             &none                   &none                 &none                                                                           &kp BACKSPACE  &kp ENTER  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        keyboard {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                     &none         &none        &none  &none  &none  &none  &none
&none       &none         &none         &bl BL_INC       &bl BL_DEC       &bl BL_TOG                &none  &none  &none  &none        &none  &none  &none  &none  &none
&none       &none         &none         &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &none           &none         &none        &none  &none  &none  &none  &none
                                        &none            &none            &bootloader                                    &bootloader  &none  &none
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
